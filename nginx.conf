server {
    listen 80;
    server_name localhost; # Имя сервера для локального доступа

    # Увеличить client_max_body_size, если нужно для загрузок и т.д.
    # client_max_body_size 100M;

    # Общий блок для приложения
    location /roulette/ {
        proxy_pass http://app:3000; # 'app' - имя сервиса Node.js в docker-compose
        proxy_http_version 1.1;

        # Важные заголовки для поддержки WebSocket (Socket.IO)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';

        # Стандартные заголовки для проксирования
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Дополнительно: Увеличить таймауты, если необходимо
        # proxy_connect_timeout       600;
        # proxy_send_timeout          600;
        # proxy_read_timeout          600;
        # send_timeout                600;
    }

    # Блок для WebSocket (Socket.IO) - можно оставить для ясности
    location /roulette/socket.io/ {
         proxy_pass http://app:3000/roulette/socket.io/; # Передаем на сервис app
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "upgrade";
         proxy_set_header Host $host;
         proxy_cache_bypass $http_upgrade;
    }

    # Корневой location для перенаправления на /roulette/
    location / {
        return 301 /roulette/;
    }

    # Стандартные страницы ошибок Nginx (можно настроить)
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
} 